
type Position {
  lat: Float
  lng: Float
}

type Location {
  city: String
  country: String
  position: Position
}

type PTPromise {
  id: ID
  title: String
  context: String
  content: String
  createdAt: String
  lifetime: Integer
  location: Location
}

input PTPromiseInput {
  title: String
  content: String
}

type HolochainInstance {
  agent: String
  dna: String
  instance: String
}

type Query {
  ## getPtPromise(id: String): PTPromise
  getPtPromise: PTPromise
  allPtPromises: [PTPromise]
  holochainInstances: [HolochainInstance]
}

type Subscription {
  allPtPromisesSub: [PTPromise]
}

 type Mutation {
 
  createPtPromise(ptPromiseInput: PTPromiseInput): PTPromise
  ## updateNote(id: String, noteInput: NoteInput): Note
  ## removeNote(id: String): Note
 }
  